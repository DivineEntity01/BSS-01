local Player = game.Players.LocalPlayer
local Players = game.Players
local Character = Player.Character
local GC = getconnections or get_signal_cons
_G.Snail = false
_G.Crab = false
_G.Mondo = false
--_G.Commando = false
local EnabledSnail = true
local EnabledCrab = true
local EnabledMondo = true
local EnabledDispensers = game.workspace:WaitForChild('Values', 1)
local args, args2, args3, args4 = 
{[1] = "Honey Dispenser"}, 
{[1] = "Treat Dispenser"}, 
{[1] = "Strawberry Dispenser"}, 
{[1] = "Blueberry Dispenser"}
local args5, args6, args7, args8, args9, args10 = 
{[1] = "Wealth Clock"},
{[1] = "Free Ant Pass Dispenser"},
{[1] = "Coconut Dispenser"},
{[1] = "Free Royal Jelly Dispenser"},
{[1] = "Honeyday Candles"},
{[1] = "Gingerbread House"}
local e1, e2, e3, e4 = 
{[1] = "Beesmas Feast"},
{[1] = "Onett's Lid Art"},
{[1] = "Glue Dispenser"},
{[1] = "Honey Wreath"}



--[[

 ___  ____  ____  ____  ____  _  _   ___  ___ 
/ __)( ___)(_  _)(_  _)(_  _)( \( ) / __)/ __)
\__ \ )__)   )(    )(   _)(_  )  ( ( (_-.\__ \
(___/(____) (__)  (__) (____)(_)\_) \___/(___/


]]

-- Commando Chick Switch
--_G.CommandoChick = false




--[[

 ___   ___  ____  ____  ____  ____ 
/ __) / __)(  _ \(_  _)(  _ \(_  _)
\__ \( (__  )   / _)(_  )___/  )(  
(___/ \___)(_)\_)(____)(__)   (__) 

]]


if workspace:WaitForChild('Values', 1) then
    wait()
else
    local Values = Instance.new('Folder')
    Values.Name = 'Values'
    Values.Parent = game.workspace
    local switch = Instance.new('BoolValue')
    switch.Name = 'bool'
    switch.Parent = Values
    switch.Value = true
end

local EnabledDispensers = EnabledDispensers.bool.Value

--AntiAFK taken from Infinite Yield Source https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source
if GC then
		for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
			if v["Disable"] then
				v["Disable"](v)
			elseif v["Disconnect"] then
				v["Disconnect"](v)
			end
		end
end


--Snail
if _G.SnailIn == true then
if workspace:WaitForChild('SnailPlatform', 1) then
    workspace:WaitForChild('SnailPlatform', 1):Destroy()
    Character.HumanoidRootPart.CFrame = CFrame.new(310, 133, 2)
    workspace.SnailPlatform:Destroy()
    local Platform = Instance.new("Part")
    Platform.Parent = game.workspace
    Platform.Name = 'SnailPlatform'
    Platform.Anchored = true
    Platform.CFrame = CFrame.new(423, 128, -178)
    Platform.Size = Vector3.new(10, 1, 10)
    Platform.Color = Color3.new(0, 0, 0)
    wait(1)
    _G.Snail = true
    Character.HumanoidRootPart.CFrame = CFrame.new(423, 133, -178)
else
Character.HumanoidRootPart.CFrame = CFrame.new(310, 133, 2)
local Platform = Instance.new("Part")
Platform.Parent = game.workspace
Platform.Name = 'SnailPlatform'
Platform.Anchored = true
Platform.CFrame = CFrame.new(423, 128, -178)
Platform.Size = Vector3.new(10, 1, 10)
Platform.Color = Color3.new(0, 0, 0)
wait(1)
_G.Snail = true
Character.HumanoidRootPart.CFrame = CFrame.new(423, 133, -178)
wait(1)
end
while _G.Snail == true do
    wait()
    if EnabledSnail == true then
        EnabledSnail = false
        local SnailMonster = game:GetService("Workspace").Monsters:WaitForChild("Stump Snail (Lvl 6)", 5)
        if SnailMonster then
            if SnailMonster.Target.Value == Character and SnailMonster.Humanoid.Health >= 5000 then
                Character.HumanoidRootPart.CFrame = CFrame.new(423, 133, -178)
            elseif SnailMonster.Target.Value == Character and SnailMonster.Humanoid.Health <= 5000 then
            game.Workspace.SnailPlatform:Destroy()
             _G.Snail = false
            end
        elseif not SnailMonster then
            game.Workspace.SnailPlatform:Destroy()
            _G.Snail = false
        end
end
wait(10)
EnabledSnail = true
end
end
if _G.SnailIn == false then
    local platform = workspace:WaitForChild('SnailPlatform', 1)
    if platform then
        platform:Destroy()
    elseif not platform then
end
end

--CoconutCrab
if _G.CoconutCrabIn == true then
    if workspace:WaitForChild('CoconutPlatform', 1) then
        workspace:WaitForChild('CoconutPlatform', 1):Destroy()
        Character.HumanoidRootPart.CFrame = CFrame.new(-344, 111, 535)
        wait()
        local Platform2 = Instance.new("Part")
        Platform2.Parent = game.workspace
        Platform2.Name = 'CoconutPlatform'
        Platform2.Anchored = true
        Platform2.CFrame = CFrame.new(-262, 109, 510)
        Platform2.Size = Vector3.new(10, 1, 10)
        Platform2.Color = Color3.new(0, 0, 0)
        wait(1)
        Character.HumanoidRootPart.CFrame = CFrame.new(-262, 114, 508)
        _G.Crab = true
    else
        Character.HumanoidRootPart.CFrame = CFrame.new(-344, 111, 535)
        local Platform2 = Instance.new("Part")
        Platform2.Parent = game.workspace
        Platform2.Name = 'CoconutPlatform'
        Platform2.Anchored = true
        Platform2.CFrame = CFrame.new(-262, 109, 510)
        Platform2.Size = Vector3.new(10, 1, 10)
        Platform2.Color = Color3.new(0, 0, 0)
        wait(1)
        Character.HumanoidRootPart.CFrame = CFrame.new(-262, 114, 508)
        _G.Crab = true
    end
     while _G.Crab == true do
            wait()
            if EnabledCrab == true then
            EnabledCrab = false
            local CoconutMonster = game:GetService("Workspace").Monsters:WaitForChild("Coconut Crab (Lvl 12)", 5)
            wait(1)
            if CoconutMonster then
                if CoconutMonster.Target.Value == Character and CoconutMonster.Humanoid.Health >= 1000 then
                    Character.HumanoidRootPart.CFrame = CFrame.new(-262, 114, 508)
                elseif CoconutMonster.Target.Value == Character and CoconutMonster.Humanoid.Health <= 100 then
                    wait(15)
                    workspace:WaitForChild('CoconutPlatform', 1):Destroy()
                    Character.HumanoidRootPart.CFrame = CFrame.new(-244, 71, 437)
                    _G.Crab = false
                end
            elseif not CoconutMonster then
                    _G.Crab = false
                    workspace:WaitForChild('CoconutPlatform', 1):Destroy()
            end
            end
                wait(10)
                EnabledCrab = true
end
end
if _G.CoconutCrabIn == false then
    local platform = workspace:WaitForChild('CoconutPlatform', 1)
    if platform then
        platform:Destroy()
    elseif not platform then
end
end

--MondoChick
if _G.MondoIn == true then
    if workspace:WaitForChild('MondoPlatform', 1) then
        workspace:WaitForChild('MondoPlatform', 1):Destroy()
end
if game:GetService("Workspace").Monsters:WaitForChild("Mondo Chick (Lvl 8)", 5) then
        Character.HumanoidRootPart.CFrame = CFrame.new(-54, 210, -249)
        local Platform3 = Instance.new('Part')
        Platform3.Parent = game.workspace
        Platform3.Name = 'MondoPlatform'
        Platform3.Anchored = true
        Platform3.CFrame = CFrame.new(79, 210, -166)
        Platform3.Size = Vector3.new(10, 1, 10)
        Platform3.Color = Color3.new(0, 0, 0)
        wait(3)
        _G.Mondo = true
        Character.HumanoidRootPart.CFrame = CFrame.new(79, 213, -166)
    while _G.Mondo == true do
        wait()
        if EnabledMondo == true then
            EnabledMondo = false
        local MondoMonster = game:GetService("Workspace").Monsters:WaitForChild("Mondo Chick (Lvl 8)", 5)
        local Health = game:GetService("Workspace").Monsters:WaitForChild("Mondo Chick (Lvl 8)", 5).Humanoid.Health
        local MondoPlatform = game.Workspace:WaitForChild('MondoPlatform')
        if MondoMonster and Health >= 100 then
            Character.HumanoidRootPart.CFrame = CFrame.new(79, 213, -166)
        elseif MondoMonster and Health <= 100 then
            Character.HumanoidRootPart.CFrame = CFrame.new(23, 176, -181)
            MondoPlatform:Destroy()
        elseif not MondoMonster then
            Character.HumanoidRootPart.CFrame = CFrame.new(23, 176, -181)
            MondoPlatform:Destroy()
end
end
wait(10)
EnabledMondo = true
end
else 
local CoreGui = game:GetService("StarterGui")
local bindable = Instance.new("BindableFunction")

function bindable.OnInvoke(response)
    local sound = Instance.new("Sound", Character.HumanoidRootPart)
    sound.Name = 'bruh'
    sound.SoundId = "rbxassetid://170040190"
    sound:Play()
    wait(2)
    Character.HumanoidRootPart.bruh:Destroy()
end

CoreGui:SetCore("SendNotification", {
	Title = "MondoChick Enabled",
	Text = "There is no Mondo Chick",
	Duration = 6000,
	Callback = bindable,
	Button1 = "Ok"
})
end
end
if _G.MondoIn == false then
    workspace:WaitForChild('MondoPlatform', 1):Destroy()
end

--AutoDispensers
if _G.DispensersIn == true then
while _G.DispensersIn == true do
if game.Players.LocalPlayer:IsInGroup(3982592) and EnabledDispensers == true and not EssentialDispensers then
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args))
    wait()
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args2))
    wait()
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args3))
    wait()
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args6))
    wait()
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args7))
    wait()
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args8))
    wait()
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args9))
    wait()
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args10))
    wait()
elseif not game.Players.LocalPlayer:IsInGroup(3982592) and EnabledDispensers == true and not EssentialDispensers then
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args5))
    wait()
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args6))
    wait()
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args7))
    wait()
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args8))
    wait()
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args9))
    wait()
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(args10))
    wait()
end
if EnabledDispensers == true and _G.EssentialDispensers == true then
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(e1))
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(e2))
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(e3))
    game:GetService("ReplicatedStorage").Events.ToyEvent:FireServer(unpack(e4))
end
if _G.DispensersIn == false then
break
elseif _G.DispensersIn == true and EnabledDispensers == true then
game.workspace.Values.bool.Value = false
wait(600)
EnabledDispensers = true
elseif _G.DispensersIn == true and EnabledDispensers == false then
wait(600)
end
end
end
if _G.DispensersIn == false then
    game.workspace.Values.bool.Value = false
    wait(5)
    game.workspace.Values.bool.Value = true
    _G.DispensersIn = false
end
