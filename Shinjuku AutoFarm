_G.addedt = false
local Weapons = game.workspace:GetChildren()
local WalkingTo = false
local GC = getconnections or get_signal_cons

if GC then
		for i,v in pairs(GC(game.Players.LocalPlayer.Idled)) do
			if v["Disable"] then
				v["Disable"](v)
			elseif v["Disconnect"] then
				v["Disconnect"](v)
			end
		end
end

if _G.Toggle then
--while _G.Toggle do
    for i,v in pairs(Weapons) do
        if v.Name == "WeaponSpawn" and _G.Toggle then
            if v.WeaponLocation.WeaponTaken.Value == false and WalkingTo == false then
                repeat
                WalkingTo = true
                game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
--                game.Players.LocalPlayer:WaitForChild('Character').Humanoid:MoveTo(v.WeaponLocation.Position, v.WeaponLocation)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.WeaponLocation.Position) + Vector3.new(-0.1, 2.718, 0)
                wait()
                until v.WeaponLocation.WeaponTaken.Value == true
wait()
end
end

game.Players.LocalPlayer.Backpack.ChildAdded:Connect(function(added)
    _G.addedt = true
    repeat
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game:GetService("Workspace")["pawn shop button"].Position) + Vector3.new(0, -2, 0)
    if added.Name == "Fists" then
    return
    end
    if added.Name ~= "Fists" then
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game:GetService("Workspace")["pawn shop button"].Position) + Vector3.new(0, -2, 0)
    local args = {[1] = {[1] = added}}
    game:GetService("ReplicatedStorage").SellWeapon:FireServer(unpack(args))
    game.Players.LocalPlayer.Backpack.ChildRemoved:Connect(function(removed)
    if removed.Name == "Fists" then
    return
    end
    if removed.Name ~= "Fists" then
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game:GetService("Workspace")["pawn shop button"].Position) + Vector3.new(0, -2, 0)
        _G.addedt = false
    end
    end)
    end
    wait()
    until _G.addedt == false
    WalkingTo = false
end)
end
end
--end
